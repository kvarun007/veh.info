# Generated by Django 5.1.2 on 2024-12-10 09:21

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myBackEnd', '0010_indiacardatabasebyteoalidafullspecssample_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndiaBikeDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Source_URL', models.TextField(blank=True, db_column='Source_URL', null=True)),
                ('make', models.TextField(blank=True, db_column='Make', null=True)),
                ('series', models.TextField(blank=True, db_column='Series', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('version', models.TextField(blank=True, db_column='Version', null=True)),
                ('ex_showroom_price_in_mumbai', models.IntegerField(blank=True, db_column='Ex-showroom price in Mumbai', null=True)),
                ('image_url', models.TextField(blank=True, db_column='Image URL', null=True)),
                ('colors_name', models.TextField(blank=True, db_column='Colors name', null=True)),
                ('colors_rgb', models.TextField(blank=True, db_column='Colors RGB', null=True)),
                ('fuel_type', models.TextField(blank=True, db_column='Fuel Type', null=True)),
                ('max_power', models.TextField(blank=True, db_column='Max Power', null=True)),
                ('rated_power', models.TextField(blank=True, db_column='Rated Power', null=True)),
                ('max_torque', models.TextField(blank=True, db_column='Max Torque', null=True)),
                ('emission_standard', models.TextField(blank=True, db_column='Emission Standard', null=True)),
                ('displacement', models.TextField(blank=True, db_column='Displacement', null=True)),
                ('cylinders', models.IntegerField(blank=True, db_column='Cylinders', null=True)),
                ('bore', models.TextField(blank=True, db_column='Bore', null=True)),
                ('stroke', models.TextField(blank=True, db_column='Stroke', null=True)),
                ('valves_per_cylinder', models.IntegerField(blank=True, db_column='Valves Per Cylinder', null=True)),
                ('compression_ratio', models.TextField(blank=True, db_column='Compression Ratio', null=True)),
                ('ignition', models.TextField(blank=True, db_column='Ignition', null=True)),
                ('spark_plugs', models.TextField(blank=True, db_column='Spark Plugs', null=True)),
                ('cooling_system', models.TextField(blank=True, db_column='Cooling System', null=True)),
                ('transmission', models.TextField(blank=True, db_column='Transmission', null=True)),
                ('transmission_type', models.TextField(blank=True, db_column='Transmission Type', null=True)),
                ('clutch', models.TextField(blank=True, db_column='Clutch', null=True)),
                ('fuel_delivery_system', models.TextField(blank=True, db_column='Fuel Delivery System', null=True)),
                ('fuel_tank_capacity', models.TextField(blank=True, db_column='Fuel Tank Capacity', null=True)),
                ('reserve_fuel_capacity', models.TextField(blank=True, db_column='Reserve Fuel Capacity', null=True)),
                ('riding_range', models.TextField(blank=True, db_column='Riding Range', null=True)),
                ('mileage_arai', models.TextField(blank=True, db_column='Mileage - ARAI', null=True)),
                ('mileage_owner_reported', models.TextField(blank=True, db_column='Mileage - Owner Reported', null=True)),
                ('top_speed', models.TextField(blank=True, db_column='Top Speed', null=True)),
                ('battery_charging_time', models.TextField(blank=True, db_column='Battery charging time', null=True)),
                ('fast_charging_time', models.TextField(blank=True, db_column='Fast charging time', null=True)),
                ('carrying_capacity', models.TextField(blank=True, db_column='Carrying capacity', null=True)),
                ('battery_capacity', models.TextField(blank=True, db_column='Battery capacity', null=True)),
                ('battery_type', models.TextField(blank=True, db_column='Battery type', null=True)),
                ('motor_type', models.TextField(blank=True, db_column='Motor type', null=True)),
                ('charger_output', models.TextField(blank=True, db_column='Charger output', null=True)),
                ('braking_system', models.TextField(blank=True, db_column='Braking System', null=True)),
                ('front_brake_type', models.TextField(blank=True, db_column='Front Brake Type', null=True)),
                ('front_brake_size', models.TextField(blank=True, db_column='Front Brake Size', null=True)),
                ('rear_brake_type', models.TextField(blank=True, db_column='Rear Brake Type', null=True)),
                ('rear_brake_size', models.TextField(blank=True, db_column='Rear Brake Size', null=True)),
                ('calliper_type', models.TextField(blank=True, db_column='Calliper Type', null=True)),
                ('front_wheel_size', models.TextField(blank=True, db_column='Front Wheel Size', null=True)),
                ('rear_wheel_size', models.TextField(blank=True, db_column='Rear Wheel Size', null=True)),
                ('front_tyre_size', models.TextField(blank=True, db_column='Front Tyre Size', null=True)),
                ('rear_tyre_size', models.TextField(blank=True, db_column='Rear Tyre Size', null=True)),
                ('tyre_type', models.TextField(blank=True, db_column='Tyre Type', null=True)),
                ('radial_tyres', models.TextField(blank=True, db_column='Radial Tyres', null=True)),
                ('wheel_type', models.TextField(blank=True, db_column='Wheel Type', null=True)),
                ('front_suspension', models.TextField(blank=True, db_column='Front Suspension', null=True)),
                ('rear_suspension', models.TextField(blank=True, db_column='Rear Suspension', null=True)),
                ('kerb_weight', models.TextField(blank=True, db_column='Kerb Weight', null=True)),
                ('overall_length', models.TextField(blank=True, db_column='Overall Length', null=True)),
                ('overall_width', models.TextField(blank=True, db_column='Overall Width', null=True)),
                ('overall_height', models.TextField(blank=True, db_column='Overall Height', null=True)),
                ('wheelbase', models.TextField(blank=True, db_column='Wheelbase', null=True)),
                ('ground_clearance', models.TextField(blank=True, db_column='Ground Clearance', null=True)),
                ('seat_height', models.TextField(blank=True, db_column='Seat Height', null=True)),
                ('chassis_type', models.TextField(blank=True, db_column='Chassis Type', null=True)),
                ('battery_warranty', models.TextField(blank=True, db_column='Battery warranty', null=True)),
                ('motor_warranty', models.TextField(blank=True, db_column='Motor warranty', null=True)),
                ('odometer', models.TextField(blank=True, db_column='Odometer', null=True)),
                ('drls_daytime_running_lights_field', models.TextField(blank=True, db_column='DRLs (Daytime running lights)', null=True)),
                ('mobile_app_connectivity', models.TextField(blank=True, db_column='Mobile App Connectivity', null=True)),
                ('gps_navigation', models.TextField(blank=True, db_column='GPS & Navigation', null=True)),
                ('usb_charging_port', models.TextField(blank=True, db_column='USB charging port', null=True)),
                ('front_storage_box', models.TextField(blank=True, db_column='Front storage box', null=True)),
                ('under_seat_storage', models.TextField(blank=True, db_column='Under seat storage', null=True)),
                ('aho_automatic_headlight_on_field', models.TextField(blank=True, db_column='AHO (Automatic Headlight On)', null=True)),
                ('speedometer', models.TextField(blank=True, db_column='Speedometer', null=True)),
                ('fuel_guage', models.TextField(blank=True, db_column='Fuel Guage', null=True)),
                ('tachometer', models.TextField(blank=True, db_column='Tachometer', null=True)),
                ('stand_alarm', models.TextField(blank=True, db_column='Stand Alarm', null=True)),
                ('stepped_seat', models.TextField(blank=True, db_column='Stepped Seat', null=True)),
                ('no_of_tripmeters', models.TextField(blank=True, db_column='No. of Tripmeters', null=True)),
                ('tripmeter_type', models.TextField(blank=True, db_column='Tripmeter Type', null=True)),
                ('low_fuel_indicator', models.TextField(blank=True, db_column='Low Fuel Indicator', null=True)),
                ('low_oil_indicator', models.TextField(blank=True, db_column='Low Oil Indicator', null=True)),
                ('low_battery_indicator', models.TextField(blank=True, db_column='Low Battery Indicator', null=True)),
                ('pillion_backrest', models.TextField(blank=True, db_column='Pillion Backrest', null=True)),
                ('pillion_grabrail', models.TextField(blank=True, db_column='Pillion Grabrail', null=True)),
                ('pillion_seat', models.TextField(blank=True, db_column='Pillion Seat', null=True)),
                ('pillion_footrest', models.TextField(blank=True, db_column='Pillion Footrest', null=True)),
                ('digital_fuel_guage', models.TextField(blank=True, db_column='Digital Fuel Guage', null=True)),
                ('start_type', models.TextField(blank=True, db_column='Start Type', null=True)),
                ('shift_light', models.TextField(blank=True, db_column='Shift Light', null=True)),
                ('antilock_braking_system', models.TextField(blank=True, db_column='Antilock Braking System', null=True)),
                ('killswitch', models.TextField(blank=True, db_column='Killswitch', null=True)),
                ('clock', models.TextField(blank=True, db_column='Clock', null=True)),
                ('electric_system', models.TextField(blank=True, db_column='Electric System', null=True)),
                ('battery', models.TextField(blank=True, db_column='Battery', null=True)),
                ('headlight_type', models.TextField(blank=True, db_column='Headlight Type', null=True)),
                ('headlight_bulb_type', models.TextField(blank=True, db_column='Headlight Bulb Type', null=True)),
                ('brake_tail_light', models.TextField(blank=True, db_column='Brake/Tail Light', null=True)),
                ('turn_signal', models.TextField(blank=True, db_column='Turn Signal', null=True)),
                ('pass_light', models.TextField(blank=True, db_column='Pass Light', null=True)),
                ('additional_features', models.TextField(blank=True, db_column='Additional features', null=True)),
                ('bangalore', models.TextField(blank=True, db_column='Bangalore', null=True)),
                ('mumbai', models.TextField(blank=True, db_column='Mumbai', null=True)),
                ('delhi', models.TextField(blank=True, db_column='Delhi', null=True)),
                ('pune', models.TextField(blank=True, db_column='Pune', null=True)),
                ('chennai', models.TextField(blank=True, db_column='Chennai', null=True)),
                ('kolkata', models.TextField(blank=True, db_column='Kolkata', null=True)),
                ('hyderabad', models.TextField(blank=True, db_column='Hyderabad', null=True)),
                ('lucknow', models.TextField(blank=True, db_column='Lucknow', null=True)),
                ('about_model', models.TextField(blank=True, db_column='About Model', null=True)),
            ],
            options={
                'db_table': 'india_bike_database',
                'managed': False,
            },
        ),
    ]
